{
    "method": "Truncated SVD",
    "desc": "<span class='help-method'>Dimensionality reduction using truncated SVD (aka LSA).</span>This transformer performs linear dimensionality reduction by means of truncated singular value decomposition (SVD). Contrary to PCA, this estimator does not center the data before computing the singular value decomposition. This means it can work with scipy.sparse matrices efficiently. In particular, truncated SVD works on term count/tf-idf matrices as returned by the vectorizers in sklearn.feature_extraction.text. In that context, it is known as latent semantic analysis (LSA). This estimator supports two algorithms: a fast randomized SVD solver, and a “naive” algorithm that uses ARPACK as an eigensolver on (X * X.T) or (X.T * X), whichever is more efficient. Read more in the scikit-learn user guide. ",
    "summary": "",
    "url": "http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.TruncatedSVD.html#sklearn.decomposition.TruncatedSVD",
    "params": [
        {
            "name": "n components",
            "type": "int, default = 2",
            "desc": "Desired dimensionality of output data. Must be strictly less than the number of features. The default value is useful for visualisation. For LSA, a value of 100 is recommended."
        },
        {
            "name": "algorithm",
            "type": "string, default = “randomized”",
            "desc": "SVD solver to use. Either “arpack” for the ARPACK wrapper in SciPy (scipy.sparse.linalg.svds), or “randomized” for the randomized algorithm due to Halko (2009)."
        },
        {
            "name": "n iter",
            "type": "int, optional (default 5)",
            "desc": "Number of iterations for randomized SVD solver. Not used by ARPACK. The default is larger than the default in randomized_svd to handle sparse matrices that may have large slowly decaying spectrum."
        },
        {
            "name": "random state",
            "type": "int, RandomState instance or None, optional, default = None",
            "desc": "If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by np.random."
        },
        {
            "name": "tol",
            "type": "float, optional",
            "desc": "Tolerance for ARPACK. 0 means machine precision. Ignored by randomized SVD solver."
        }
    ],
    "attrs": [
        {
            "name": "components",
            "type": "array, shape (n_components, n_features)",
            "desc": "explained_variance_ : array, shape (n_components,)"
        },
        {
            "name": "The variance of the training samples transformed by a projection to\neach component.",
            "type": "",
            "desc": "explained_variance_ratio_ : array, shape (n_components,)"
        },
        {
            "name": "Percentage of variance explained by each of the selected components.",
            "type": "",
            "desc": "singular_values_ : array, shape (n_components,)"
        },
        {
            "name": "The singular values corresponding to each of the selected components.\nThe singular values are equal to the 2-norms of the n components\nvariables in the lower-dimensional space.",
            "type": "",
            "desc": ""
        }
    ],
    "citations": [
        {
            "name": "Finding structure with randomness: Stochastic algorithms for constructing approximate matrix decompositions",
            "desc": "Finding structure with randomness: Stochastic algorithms for constructing approximate matrix decompositions Halko, et al., 2009 (arXiv:909)",
            "url": "https://arxiv.org/pdf/0909.4061/"
        },
        {
            "name": "Scikit-learn: Machine Learning in Python",
            "desc": "Scikit-learn: Machine Learning in Python, Pedregosa et al., JMLR 12, pp. 2825-2830, 2011.",
            "url": "http://www.jmlr.org/papers/volume12/pedregosa11a/pedregosa11a.pdf"
        },
        {
            "name": "API design for machine learning software: experiences from the scikit-learn project",
            "desc": "API design for machine learning software: experiences from the scikit-learn project, Buitinck et al., 2013.",
            "url": "http://www.di.ens.fr/sierra/pdfs/icml09.pdf"
        }
    ]
}
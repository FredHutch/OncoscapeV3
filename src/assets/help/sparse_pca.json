{"method":"Sparse PCA","desc":"Sparse Principal Components Analysis (SparsePCA)<br />Finds the set of sparse components that can optimally reconstruct<br />the data.  The amount of sparseness is controllable by the coefficient<br />of the L1 penalty, given by the parameter alpha.<br />Read more in the User Guide.<br />","url":"http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.SparsePCA.html#sklearn.decomposition.SparsePCA","params":[{"name":"n_components","type":"int,","desc":"Number of sparse atoms to extract."},{"name":"alpha","type":"float,","desc":"Sparsity controlling parameter. Higher values lead to sparser components."},{"name":"ridge_alpha","type":"float,","desc":"Amount of ridge shrinkage to apply in order to improve conditioning when calling the transform method."},{"name":"max_iter","type":"int,","desc":"Maximum number of iterations to perform."},{"name":"tol","type":"float,","desc":"Tolerance for the stopping condition."},{"name":"method","type":"{‘lars’, ‘cd’}","desc":"lars: uses the least angle regression method to solve the lasso problem (linear_model.lars_path) cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). Lars will be faster if the estimated components are sparse."},{"name":"n_jobs","type":"int,","desc":"Number of parallel jobs to run."},{"name":"U_init","type":"array of shape (n_samples, n_components),","desc":"Initial values for the loadings for warm restart scenarios."},{"name":"V_init","type":"array of shape (n_components, n_features),","desc":"Initial values for the components for warm restart scenarios."},{"name":"verbose","type":"int","desc":"Controls the verbosity; the higher, the more messages. Defaults to 0."},{"name":"random_state","type":"int, RandomState instance or None, optional (default=None)","desc":"If int, random_state is the seed used by the random number generator; If RandomState instance, random_state is the random number generator; If None, the random number generator is the RandomState instance used by np.random."}],"attrs":[{"name":"components_","type":"array, [n_components, n_features]","desc":"Sparse components extracted from the data."},{"name":"error_","type":"array","desc":"Vector of errors at each iteration."},{"name":"n_iter_","type":"int","desc":"Number of iterations run."}]}
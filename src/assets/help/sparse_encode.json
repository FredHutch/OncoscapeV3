{"method":"Sparse Encode","desc":"<span class='help-method'>Sparse coding</span>Each row of the result is the solution to a sparse coding problem. The goal is to find a sparse array code such that: X ~= code * dictionary Read more in the scikit-learn user guide. ","url":"http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.sparse_encode.html","params":[{"name":"X","type":"array of shape (n_samples, n_features)","desc":"Data matrix"},{"name":"dictionary","type":"array of shape (n_components, n_features)","desc":"The dictionary matrix against which to solve the sparse coding of the data. Some of the algorithms assume normalized rows for meaningful output."},{"name":"gram","type":"array, shape=(n_components, n_components)","desc":"Precomputed Gram matrix, dictionary * dictionary’"},{"name":"cov","type":"array, shape=(n_components, n_samples)","desc":"Precomputed covariance, dictionary’ * X"},{"name":"algorithm","type":"{‘lasso_lars’, ‘lasso_cd’, ‘lars’, ‘omp’, ‘threshold’}","desc":"lars: uses the least angle regression method (linear_model.lars_path) lasso_lars: uses Lars to compute the Lasso solution lasso_cd: uses the coordinate descent method to compute the Lasso solution (linear_model.Lasso). lasso_lars will be faster if the estimated components are sparse. omp: uses orthogonal matching pursuit to estimate the sparse solution threshold: squashes to zero all coefficients less than alpha from the projection dictionary * X’"},{"name":"n nonzero coefs","type":"int, 0.1 * n_features by default","desc":"Number of nonzero coefficients to target in each column of the solution. This is only used by algorithm=’lars’ and algorithm=’omp’ and is overridden by alpha in the omp case."},{"name":"alpha","type":"float, 1. by default","desc":"If algorithm=’lasso_lars’ or algorithm=’lasso_cd’, alpha is the penalty applied to the L1 norm. If algorithm=’threshold’, alpha is the absolute value of the threshold below which coefficients will be squashed to zero. If algorithm=’omp’, alpha is the tolerance parameter: the value of the reconstruction error targeted. In this case, it overrides n_nonzero_coefs."},{"name":"copy cov","type":"boolean, optional","desc":"Whether to copy the precomputed covariance matrix; if False, it may be overwritten."},{"name":"init","type":"array of shape (n_samples, n_components)","desc":"Initialization value of the sparse codes. Only used if algorithm=’lasso_cd’."},{"name":"max iter","type":"int, 1000 by default","desc":"Maximum number of iterations to perform if algorithm=’lasso_cd’."},{"name":"n jobs","type":"int, optional","desc":"Number of parallel jobs to run."},{"name":"check input","type":"boolean, optional","desc":"If False, the input arrays X and dictionary will not be checked."},{"name":"verbose","type":"int, optional","desc":"Controls the verbosity; the higher, the more messages. Defaults to 0."}],"attrs":[{"name":"code","type":"array of shape (n_samples, n_components)","desc":"The sparse codes"}]}
{"method":"DBSCAN","desc":"<span class='help-method'>Perform DBSCAN clustering from vector array or distance matrix.</span>DBSCAN - Density-Based Spatial Clustering of Applications with Noise. Finds core samples of high density and expands clusters from them. Good for data which contains clusters of similar density. Read more in the scikit-learn user guide. ","url":"http://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html#sklearn.cluster.DBSCAN","params":[{"name":"eps","type":"float, optional","desc":"The maximum distance between two samples for them to be considered as in the same neighborhood."},{"name":"min samples","type":"int, optional","desc":"The number of samples (or total weight) in a neighborhood for a point to be considered as a core point. This includes the point itself."},{"name":"metric","type":"string, or callable","desc":"The metric to use when calculating distance between instances in a feature array. If metric is a string or callable, it must be one of the options allowed by metrics.pairwise.calculate_distance for its metric parameter. If metric is “precomputed”, X is assumed to be a distance matrix and must be square. X may be a sparse matrix, in which case only “nonzero” elements may be considered neighbors for DBSCAN.  New in version 0.17: metric precomputed to accept precomputed sparse matrix."},{"name":"metric params","type":"dict, optional","desc":"Additional keyword arguments for the metric function.  New in version 0.19."},{"name":"algorithm","type":"{‘auto’, ‘ball_tree’, ‘kd_tree’, ‘brute’}, optional","desc":"The algorithm to be used by the NearestNeighbors module to compute pointwise distances and find nearest neighbors. See NearestNeighbors module documentation for details."},{"name":"leaf size","type":"int, optional (default = 30)","desc":"Leaf size passed to BallTree or cKDTree. This can affect the speed of the construction and query, as well as the memory required to store the tree. The optimal value depends on the nature of the problem."},{"name":"p","type":"float, optional","desc":"The power of the Minkowski metric to be used to calculate distance between points."},{"name":"n jobs","type":"int, optional (default = 1)","desc":"The number of parallel jobs to run. If -1, then the number of jobs is set to the number of CPU cores."}],"attrs":[{"name":"core sample indices","type":"array, shape = [n_core_samples]","desc":"Indices of core samples."},{"name":"components","type":"array, shape = [n_core_samples, n_features]","desc":"Copy of each core sample found by training."},{"name":"labels","type":"array, shape = [n_samples]","desc":"Cluster labels for each point in the dataset given to fit(). Noisy samples are given the label -1."}]}